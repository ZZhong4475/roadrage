package model;

import java.util.ArrayList;
import java.util.Map;
import java.util.Random;

public class Truck extends AbstractVehicle{
    private static final int myDeathTime=0;
    
    public Truck(final int theX,final int theY,final Direction theDirection) {
        super(theX,theY,theDirection,myDeathTime);
    }

    @Override
    public boolean canPass(Terrain theTerrain, Light theLight) {
        boolean thePass;
        if(theTerrain==Terrain.STREET
                        ||theTerrain==Terrain.LIGHT
                        ||theTerrain==Terrain.CROSSWALK
                        &&theLight!=Light.RED
                        ) {
            thePass=true;
        }
   
        else {
            thePass=false;
        }
        
        return thePass;
       
    
    }
    @Override
    public Direction chooseDirection(Map<Direction, Terrain> theNeighbors) {
        ArrayList<Direction> randomArray=new ArrayList<Direction>();
        int dirNum;
        final Direction theDirection;
        Random theRanDir=new Random();
        if((theNeighbors.get(getDirection())==Terrain.CROSSWALK
                        ||theNeighbors.get(getDirection())==Terrain.STREET
                        ||theNeighbors.get(getDirection())==Terrain.LIGHT
                       )){
                        randomArray.add(getDirection());}
        
        if(theNeighbors.get(getDirection().left())==Terrain.CROSSWALK
                        ||theNeighbors.get(getDirection().left())==Terrain.STREET
                        ||theNeighbors.get(getDirection().left())==Terrain.LIGHT
                        ){
                        randomArray.add(getDirection().left());}
                        
                      
        if(theNeighbors.get(getDirection().right())==Terrain.CROSSWALK
                        ||theNeighbors.get(getDirection().right())==Terrain.STREET
                        ||theNeighbors.get(getDirection().right())==Terrain.LIGHT
                        ){
                        randomArray.add(getDirection().right());}     
    if(!randomArray.isEmpty()) {
           dirNum=theRanDir.nextInt(randomArray.size());
           theDirection= randomArray.get(dirNum);
        }
    
    else {
        theDirection=getDirection().reverse();
    }
//           
//           
//                  
//
//  return myCurrentDirection;
// 
        return theDirection;
    }
    
    @Override
    public String toString() {
        StringBuilder sb=new StringBuilder();
        sb.append("The truck located at: ");
        sb.append(this.getX()+" . "+this.getY()+"\n");
        sb.append("Is it alive? ");
        sb.append(this.isAlive()+"\n");
        sb.append("The death time: ");
        sb.append(myDeathTime+"\n");
        sb.append("The facing Direction: ");
        sb.append(this.getDirection());
     
        return sb.toString();
    
}
}
